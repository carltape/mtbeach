function write_force_table(filetag,otime,lon,lat,dep,famp,fphi,fh,eid)
%WRITE_FORCE_TABLE write moment tensor catalog as text file
%
% INPUT
%   filetag     file name will be appended with _mech.txt
%   otime       n x 1 origin time (Matlab format)
%   lon         n x 1 longitude
%   lat         n x 1 latitude
%   dep         n x 1 depth, in km
%   M           
%   eid         OPTIONAL: event IDs
%
% See also read_force_table.m
%
% Note: If a table in this format is published, then you may want to list
% the references in the header in the bibliography that goes with the
% published paper (main text or supplement).
%

deg = 180/pi;
n = length(lat);

% angles in degrees
theta = acos(fh)*deg;
phi = fphi;

% phi = 0 points east
fenu = tp2xyz(theta/deg,phi/deg,famp);
fe = fenu(1,:)';
fn = fenu(2,:)';
fu = fenu(3,:)';

if 0
    i1 = 4; % e-n-u
    i2 = 1; % u-s-e
    [fuse,T] = convertv(i1,i2,fenu);
    fu_check = fuse(1,:)';
    fs_check = fuse(2,:)';
    fe_check = fuse(3,:)';

    % check
    norm(fu_check - fu) / norm(fu)
    norm(fs_check + fn) / norm(fn)
    norm(fe_check - fe) / norm(fe)
end

% geographic azimuthal angle
kappa = ph2az(phi);

% write to file for GMT plotting
disp('write_force_table.m: writing to file');

file = [filetag '_force.txt']
NHEADER = 9;
stfmt1 = '%24s%10s%10s%10s%14s%14s%14s%10s%7s%7s%7s%7s %s\n';
stfmt = '%24s%10.4f%10.4f%10.4f%14.6e%14.6e%14.6e%10.2e%7.1f%7.1f%7.3f%7.1f %s\n';

fid = fopen(file,'w');

% header
fprintf(fid,sprintf('Table of %i forces generated by write_force_table.m on %s (%i header lines)\n',n,datestr(now,29),NHEADER));
fprintf(fid,'The force vector entries (feast,fnorth,fup) are provided in units of Newtons.\n');
fprintf(fid,'  phi           : azimuthal angle, ranges from 0 to 360 (phi=0 points east, phi=90 points north)\n');
fprintf(fid,'  kappa         : geographic azimuthal angle, ranges from 0 to 360 (kappa=0 points north, kappa=90 points east)\n');
fprintf(fid,'  h = cos(theta): ranges from -1 to 1 (ensures uniformly distributed directions)\n');
fprintf(fid,'  theta         : polar angle, ranges from 0 to 180\n');
fprintf(fid,'COLUMNS\n');
fprintf(fid,stfmt1,'origin time','lon','lat','dep','feast','fnorth','fup','|f|','phi','kappa','h','theta','eid');
fprintf(fid,stfmt1,'yy mm dd HH MM SS.FFF','','','km','N','N','N','N','','','','','');

% each row is one event that is characterized by 23 (or 29) COLUMNS
for ii = 1:n
    fprintf(fid,stfmt,...
        datestr(otime(ii),'yyyy mm dd HH MM SS.FFF'),...
        lon(ii), lat(ii), dep(ii),...
        fe(ii), fn(ii), fu(ii), famp(ii), ...
        phi(ii), kappa(ii), fh(ii), theta(ii), eid{ii});
end
fclose(fid);

%==========================================================================
% EXAMPLES (will only work at UAF)

if 0==1
    % Thurin and Tape (2023)
    %     ||f_i||		phi_i            h_i
    f = [   6.95197635e+13,  1.39457327e+02, -9.30259350e-01
            4.75074688e+13,  1.42066309e+02, -9.81462394e-01
            3.94169029e+13,  1.60230189e+02, -9.54621335e-01
            3.16850738e+13,  5.53858174e+00, -9.99951880e-01];
    famp = f(:,1);
    fphi = f(:,2);
    fh   = f(:,3);
    n = length(famp);
    otime_usgs = datenum(2022,1,15,04,14,45);
    otime = otime_usgs + [50.85 256.09 293.51 321.12]/86400;
    lon = -175.390; lat = -20.546; dep = 1;
    eids = {'TT23-S1','TT23-S2','TT23-S3','TT23-S4'};
    filetag = '~/ThurinTape2023';
    x = ones(n,1);
    write_force_table(filetag,otime,lon*x,lat*x,dep*x,famp,fphi,fh,eids);
end
    
%==========================================================================
    
