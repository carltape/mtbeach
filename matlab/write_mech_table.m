function [kappa,theta,sigma,gamma,delta,nu,alpha,phi,zeta,v,w,thetadc,lam,Mw] = write_mech_table(filetag,otime,lon,lat,dep,M,eid)
%WRITE_MECH_TABLE write moment tensor catalog as text file
%
% INPUT
%   filetag     file name will be appended with _mech.txt
%   otime       n x 1 origin time (Matlab format)
%   lon         n x 1 longitude
%   lat         n x 1 latitude
%   dep         n x 1 depth, in km
%   M           6 x n array of moment tensors in GCMT convention (up-south-east)
%                   M = [Mrr Mtt Mpp Mrt Mrp Mtp], units N-m
%   eid         OPTIONAL: event IDs
%
% See also read_mech_table.m
%
% Note: If a table in this format is published, then you may want to list
% the references in the header in the bibliography that goes with the
% published paper (main text or supplement).
%
% Carl Tape, 7/16/2015
%

n = length(lat);
if nargin==6, eid = repmat(cellstr(''),n,1); end

% make sure M is 6 x n
[M,n1] = Mdim(M);

% check input argument dimensions
if n1~=n, whos M lat, error('dimension mismatch (M otime)'); end
if length(lat)~=n, whos lat otime, error('dimension mismatch (lat otime)'); end
if length(lon)~=n, whos lon otime, error('dimension mismatch (lon otime)'); end
if length(dep)~=n, whos dep otime, error('dimension mismatch (dep otime)'); end

% derive other quantities from the moment tensor
[gamma,delta,M0,kappa,theta,sigma,~,~,~,thetadc,lam] = CMT2TT(M,0);
Mw = m02mw(1,M0);

% alternative measures of source type
[nu,alpha] = lam2nualpha(lam);
[phi,zeta] = lam2phizeta(lam);
[v,w] = lune2rect(gamma,delta);

% round to delta = 0 and gamma = 0 to avoid showing both 0.0 and -0.0 in the table
DEPS = 0.1;
delta(abs(delta) < DEPS) = 0;
gamma(abs(gamma) < DEPS) = 0;

% write to file for GMT plotting
disp('write_mech_table.m: writing to file');

for kk=1:2
    if kk==1
        file = [filetag '_mech.txt']
        NHEADER = 22;
        stfmt1 = '%24s%10s%10s%10s%14s%14s%14s%14s%14s%14s%14s%7s%7s%7s%7s%7s%7s %s\n';
        stfmt = '%24s%10.4f%10.4f%10.4f%14.6e%14.6e%14.6e%14.6e%14.6e%14.6e%14.6e%7.2f%7.1f%7.1f%7.1f%7.1f%7.1f %s\n';
    else
        file = [filetag '_mech_extended.txt']
        NHEADER = NHEADER+6;
        stfmt1 = '%24s%10s%10s%10s%14s%14s%14s%14s%14s%14s%14s%7s%7s%7s%7s%7s%7s%7s%7s%7s%7s%7s%7s %s\n';
        stfmt = '%24s%10.4f%10.4f%10.4f%14.6e%14.6e%14.6e%14.6e%14.6e%14.6e%14.6e%7.2f%7.1f%7.1f%7.1f%7.1f%7.1f%7.2f%7.2f%7.1f%7.1f%7.2f%7.2f %s\n';
    end

    fid = fopen(file,'w');

    % header
    fprintf(fid,sprintf('Table of %i moment tensors generated by write_mech_table.m on %s (%i header lines)\n',...
        n,datestr(now,29),NHEADER));
    fprintf(fid,'The moment tensor is provided as six Mij entries in units of N-m.\n');
    fprintf(fid,'    The basis convention follows the Global Centroid Moment Tensor (GCMT, www.globalcmt.org) project:\n');
    fprintf(fid,'        up-south-east or r-t-p, where r=up, t=theta=south, and p=phi=east.\n');
    fprintf(fid,'    Mij are listed in order of the diagonal entries (Mrr, Mtt, Mpp), followed by the off-diagonal entries.\n');
    fprintf(fid,'Also shown are other quantities derived from Mij; these entries are NOT listed with the highest precision.\n');
    fprintf(fid,'Conversion from matrix M to scalar M0 is from Silver and Jordan (1982, GJRAS):\n');
    fprintf(fid,'    M0 = 1/sqrt(2)*sqrt(M:M)\n');
    fprintf(fid,'Conversion from M0 to Mw is from Kanamori (1977, JGR):\n');
    fprintf(fid,'    Mw = (2/3)*log10(M0) + k with k = -(2/3)*(11.8 - log10(1/2e4) - 7)\n');
    fprintf(fid,'The strike, dip, and slip angles uniquely define the orientation of the moment tensor.\n');
    fprintf(fid,'    The strike angle kappa ranges from 0 to 360.\n');
    fprintf(fid,'    The dip angle theta ranges from 0 to 90.\n');
    fprintf(fid,'    The slip (or rake) angle sigma ranges from -90 to 90.\n');
    fprintf(fid,'    These angles define a plane for the closest double couple\n');
    fprintf(fid,'        and are not physically meaningful for a moment tensor that is far from a double couple.\n');
    fprintf(fid,'    If the moment tensor is a close to a double couple,\n');
    fprintf(fid,'        then the angles define either the fault plane or the auxiliary plane.\n');
    if kk==1
        fprintf(fid,'The moment tensor source type is represented by lune longitude (gamma) and lune latitude (delta) (Tape and Tape, 2012, GJI).\n');
    else
        fprintf(fid,'The moment tensor source type is a pair of coordinates derived from the three eigenvalues.\n');
        fprintf(fid,'Four different options for source type are listed:\n');
        fprintf(fid,'   (1) lune longitude (gamma) and lune latitude (delta) (Tape and Tape, 2012)\n');
        fprintf(fid,'   (2) Poisson ratio (nu) and angle between normal vector and slip vector (alpha) (Aki and Richards, 1980)\n');
        fprintf(fid,'   (3) azimuth on lune (phi) and crack fraction (zeta) (Tape and Tape, 2013)\n');
        fprintf(fid,'   (4) v and w (Tape and Tape, 2015)\n');
        fprintf(fid,'Options (2) and (3) are based on the crack-plus-double-couple model (Minson et al., 2007).\n');
    end
    fprintf(fid,'COLUMNS\n');
    if kk==1
        fprintf(fid,stfmt1,'origin time','lon','lat','dep','Mrr','Mtt','Mpp','Mrt','Mrp','Mtp','M0','Mw','strike','dip','slip','lune','lune','eid');
        fprintf(fid,stfmt1,'yy mm dd HH MM SS.FFF','','','km','N-m','N-m','N-m','N-m','N-m','N-m','N-m','','kappa','theta','sigma','gamma','delta','');
    else
        fprintf(fid,stfmt1,'origin time','lon','lat','dep','Mrr','Mtt','Mpp','Mrt','Mrp','Mtp','M0','Mw','strike','dip','slip','lune','lune','CDC','CDC','CDC','CDC','rect','rect','eid');
        fprintf(fid,stfmt1,'yy mm dd HH MM SS.FFF','','','km','N-m','N-m','N-m','N-m','N-m','N-m','N-m','','kappa','theta','sigma','gamma','delta','nu','alpha','phi','zeta','v','w','');
    end
    % each row is one event that is characterized by 23 (or 29) COLUMNS
    for ii = 1:n
        if kk==1
            stype = [gamma(ii) delta(ii)];
        else
            stype = [gamma(ii) delta(ii) nu(ii) alpha(ii) phi(ii) zeta(ii) v(ii) w(ii) ];
        end
        fprintf(fid,stfmt,...
            datestr(otime(ii),'yyyy mm dd HH MM SS.FFF'),...
            lon(ii), lat(ii), dep(ii),...
            M(1,ii), M(2,ii), M(3,ii),...
            M(4,ii), M(5,ii), M(6,ii),...
            M0(ii),Mw(ii),kappa(ii),theta(ii),sigma(ii),stype,eid{ii});
    end
    fclose(fid);

end

%==========================================================================
% EXAMPLES (will only work at UAF)

if 0==1
    % Celso catalog for Alvizuri2016 paper
    bdir = [getenv('REPOS') '/manuscripts/'];
    idir = [bdir 'alvizuri/papers/2014fmt/data/'];
    [otime,lon,lat,dep,M,M0,Mw,eid] = read_mech_table([idir 'uturuncu_mech.txt']);
    display_eq_summary(otime,lon,lat,dep,Mw);
    write_mech_table('~/utu_test',otime,lon,lat,dep,M,eid);

    % GCMT catalog
    axMFFZ = [-151.2 -147.5 63.5 65.5];
    [otime,tshift,hdur,lat,lon,dep,M,M0,Mw,eid] = readCMT([],axMFFZ,[]);
    filetag = './GCMT_mffz';
    %write_mech_table(filename,otime,lon,lat,dep,M);
    write_mech_table(filetag,otime,lon,lat,dep,M,eid);
    
    % illustrate how rounding works (rounding will occur for 0.0001 s)
    seci = 59.9999;
    %seci = 59.999;
    dnum = datenum(1979,10,20,12,34,seci);
    [y,m,d,h,mi,s] = datevec(dnum) 
    datestr(dnum,'yyyy mm dd HH MM SS.FFF')
    
    % Thurin and Tape (2023)
    % The MT is directly out of MTUQ, in N-m and the ordering is Mrr, Mtt, Mpp, Mrt, Mrp, Mtp.
    M = load('~/Downloads/mts.csv')';
    n = length(M(1,:));
    otime_usgs = datenum(2022,1,15,04,14,45);
    otime = otime_usgs + [50.88 256.47 294.30 320.47]/86400;
    lon = -175.390; lat = -20.546; dep = 1;
    eids = {'TT23-S1','TT23-S2','TT23-S3','TT23-S4'};
    filetag = '~/ThurinTape2023';
    x = ones(n,1);
    write_mech_table(filetag,otime,lon*x,lat*x,dep*x,M,eids);
    % check eigenvalues
    %[lam,U_use] = CMTdecom(M);
    % 10^18
    %2.2020    4.7546    1.5545    2.0023
    %1.0069    1.9596    0.6493    0.8054
    %0.9647    1.8771    0.6493    0.6015
    % display Mij entries (for Mathematica, to make ellipsoids)
    %displayCMTshort(M/1e16,'%8.2f')
end
    
%==========================================================================
    
